services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: amigoscode
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "amigoscode"]
      timeout: 20s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - spring

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - spring

  config-server:
    container_name: config-server
    image: sxlecquer/config-server:latest
    pull_policy: missing
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      zipkin:
        condition: service_healthy
    networks:
      - spring

  eureka-server:
    container_name: eureka-server
    image: sxlecquer/eureka-server:latest
    pull_policy: missing
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      zipkin:
        condition: service_healthy
    networks:
      - spring

  api-gateway:
    container_name: api-gateway
    image: sxlecquer/api-gateway:latest
    pull_policy: missing
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
      eureka-server:
        condition: service_started
    networks:
      - spring

  customer:
    container_name: customer
    image: sxlecquer/customer:latest
    pull_policy: missing
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
      eureka-server:
        condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - spring
      - postgres

  fraud:
    container_name: fraud
    image: sxlecquer/fraud:latest
    pull_policy: missing
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
      eureka-server:
        condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - spring
      - postgres

  notification:
    container_name: notification
    image: sxlecquer/notification:latest
    pull_policy: missing
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_started
      zipkin:
        condition: service_healthy
      eureka-server:
        condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - spring
      - postgres


networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin: